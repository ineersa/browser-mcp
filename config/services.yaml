# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.browser_backend: '%env(BROWSER_BACKEND)%'
    app.backend_url: '%env(BACKEND_URL)%'
    app.http_timeout: 30.0

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    App\Service\Backend\BackendInterface:
        public: true
        factory: ['@App\Service\Backend\BackendFactory', 'create']
        arguments:
            - '%app.browser_backend%'
            - '%app.backend_url%'

    App\Service\BrowserState:
        public: true

    App\Service\SearchService:
        public: true
    App\Service\OpenService:
        public: true
    App\Service\FindService:
        public: true
    # Make ALL services in App\Tools\ public
    App\Tools\:
        resource: '../src/Tools'
        public: true

    # PSR-16 cache: wrap a PSR-6 pool (ArrayAdapter) with Psr16Cache and alias to Psr\SimpleCache\CacheInterface
    cache.array_adapter:
        class: Symfony\Component\Cache\Adapter\ArrayAdapter
        arguments:
            $defaultLifetime: 0
            $storeSerialized: true

    Psr\Container\ContainerInterface: '@service_container'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    monolog.formatter.json_with_stacktraces:
        class: Monolog\Formatter\JsonFormatter
        arguments:
            $includeStacktraces: true

    http_client.retry_strategy:
        class: Symfony\Component\HttpClient\Retry\GenericRetryStrategy
        arguments:
            - [423, 425, 429, 500, 502, 503, 504]
            - 200
            - 2.0
            - 2000
            - 0.1

    http_client.retryable:
        class: Symfony\Component\HttpClient\RetryableHttpClient
        decorates: 'http_client'
        arguments:
            - '@http_client.retryable.inner'
            - '@http_client.retry_strategy'
